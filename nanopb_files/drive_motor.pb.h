/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_DRIVE_MOTOR_PB_H_INCLUDED
#define PB_DRIVE_MOTOR_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _DriveMotorRequest {
    bool has_left_motor_speed;
    uint32_t left_motor_speed;
    bool has_right_motor_speed;
    uint32_t right_motor_speed;
    bool has_reverse;
    bool reverse;
} DriveMotorRequest;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define DriveMotorRequest_init_default           {false, 0, false, 0, false, 0}
#define DriveMotorRequest_init_zero              {false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define DriveMotorRequest_left_motor_speed_tag   1
#define DriveMotorRequest_right_motor_speed_tag  2
#define DriveMotorRequest_reverse_tag            3

/* Struct field encoding specification for nanopb */
#define DriveMotorRequest_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, UINT32,   left_motor_speed,   1) \
X(a, STATIC,   OPTIONAL, UINT32,   right_motor_speed,   2) \
X(a, STATIC,   OPTIONAL, BOOL,     reverse,           3)
#define DriveMotorRequest_CALLBACK NULL
#define DriveMotorRequest_DEFAULT NULL

extern const pb_msgdesc_t DriveMotorRequest_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define DriveMotorRequest_fields &DriveMotorRequest_msg

/* Maximum encoded size of messages (where known) */
#define DRIVE_MOTOR_PB_H_MAX_SIZE                DriveMotorRequest_size
#define DriveMotorRequest_size                   22

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
